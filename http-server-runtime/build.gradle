
dependencies {
    runtime project(":http-server")

    runtime docxConnector()
    runtime excelConnector()
    runtime pdfConnector()
    runtime powerpointConnector()
    runtime openflexo("jdbcconnector")
    runtime openflexo("kafkaconnector")


    //runtime openflexo("flexodiagram-test-rc")
    runtime openflexo("docxconnector-test-rc")
    runtime openflexo("excelconnector-test-rc")
    //runtime openflexo("owlconnector-test-rc")
    runtime openflexo("pdfconnector-test-rc")
    runtime openflexo("powerpointconnector-test-rc")

}

def deployDir = "/Users/charlie/Documents/dev/openflexo/deploy/home";
def appDir = file(buildDir.canonicalPath + "/app");

task cleanApp() {
    doLast {
        if (appDir.exists()) {
            appDir.deleteDir();
        }
    }
}

task copyDockerfile(type: Copy) {
    from "../http-server/deploy/Dockerfile"
    from "../http-server/deploy/start.sh"
    into appDir.canonicalPath
}

task copyWebResources(type: Copy) {
    from "../http-server/webroot"
    into appDir.canonicalPath + "/webroot"
}

task copyJars (type: Copy) {
    from configurations.runtime.resolve()
    into appDir.canonicalPath + "/libs"
}

task deploy (dependsOn: [":http-server:assemble", "cleanApp", "copyJars", "copyWebResources", "copyDockerfile"], type: Sync) {
    from appDir
    into deployDir
}
